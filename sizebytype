#!/usr/bin/env python
from collections import defaultdict
import os
import sys

def sizeof_fmt(num, suffix='B'):
  for unit in ['','Ki','Mi','Gi','Ti','Pi','Ei','Zi']:
    if abs(num) < 1024.0:
      return "%3.1f%s%s" % (num, unit, suffix)
    num /= 1024.0
  return "%.1f%s%s" % (num, 'Yi', suffix)

root = "."
if len(sys.argv) > 1:
  root = sys.argv[1]

extensionSizes = defaultdict(int)
for dirName, _, fileList in os.walk(root):
  for f in fileList:
    try:
      _, ext = os.path.splitext(f)
      absf = os.path.abspath(os.path.join(dirName, f))
      extensionSizes[ext] += os.path.getsize(absf)
    except:
      pass

keys = extensionSizes.keys()
keys.sort()
for key in keys:
  if key is '':
    print "[None]".ljust(20), sizeof_fmt(extensionSizes['']).rjust(10)
  else:
    print key.ljust(20), sizeof_fmt(extensionSizes[key]).rjust(10)
